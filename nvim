""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ~/.vimrc
"
" Dependencies:
"
" - fzf
" - neovim editor
" - python-3's neovim package
" - rbenv

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Config - Clipboard
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set clipboard=unnamed     " Use system clipboard


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Config - Files
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set modelines=0           " Enable modelines
set nobackup              " Disable backup
set noswapfile            " Disable swap
set nowritebackup         " Disable backup


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Config - Indentation
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype plugin indent on " Enable file type based indentation
set expandtab             " Expand tabs to spaces
set shiftwidth=2          " Set number of spaces for shift/auto indentation
set tabstop=2             " Set Number of spaces for tab expansion


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Config - Search
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set hlsearch              " Enable result hightlighting
set ignorecase            " Ignore case
set smartcase             " Mind uppercase characters in the given pattern


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Config - UI/UX
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nofoldenable          " Disable folding
set nowrap                " Disable line wrapping
set number                " Display line numbersset
set synmaxcol=240         " Cap syntax highlighting to 120 columns


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Mapping - Meta
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>ve :edit ~/.vimrc<cr>
map <leader>vs :source ~/.vimrc<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Mapping - junegunn/vim-plug
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>pi :source ~/.vimrc <bar> :PlugInstall<cr>
map <leader>ps :source ~/.vimrc <bar> :PlugStatus<cr>
map <leader>pc :source ~/.vimrc <bar> :PlugClean<cr>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')
  Plug 'altercation/vim-colors-solarized'
  Plug 'airblade/vim-gitgutter'
  Plug 'benekastah/neomake'
  Plug 'bronson/vim-trailing-whitespace'
  Plug 'christoomey/vim-tmux-navigator'
  "Plug 'vim-airline/vim-airline'
  "Plug 'vim-airline/vim-airline-themes'
  Plug 'editorconfig/editorconfig-vim'
  Plug 'jparise/vim-graphql'
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install' }
  Plug 'junegunn/fzf.vim'
  Plug 'junegunn/vim-after-object'
  Plug 'junegunn/vim-easy-align'
  Plug 'mattn/emmet-vim'
  Plug 'mattn/gist-vim'
  Plug 'mattn/vim-sqlfmt'
  Plug 'mattn/webapi-vim'
  Plug 'mzlogin/vim-markdown-toc'
  Plug 'neoclide/coc.nvim', { 'branch': 'release' }
  Plug 'prettier/vim-prettier'
  Plug 'robertYan/monokai-soda'
  Plug 'scrooloose/nerdcommenter'
  Plug 'scrooloose/nerdtree'
  Plug 'scrooloose/vim-orgymode'
  Plug 'tpope/vim-abolish'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-dotenv'
  Plug 'tpope/vim-endwise'
  Plug 'tpope/vim-eunuch'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-rake'
  Plug 'tpope/vim-repeat'
  Plug 'tpope/vim-rsi'
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-unimpaired'
  Plug 'baskerville/bubblegum'
  "Plug 'MaxMEllon/vim-jsx-pretty'
  "Plug 'chrisbra/csv.vim'
  "Plug 'dart-lang/dart-vim-plugin'
  "Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
  "Plug 'garbas/vim-snipmate' | Plug 'MarcWeber/vim-addon-mw-utils' | Plug 'tomtom/tlib_vim'
  "Plug 'jiangmiao/auto-pairs'
  "Plug 'slim-template/vim-slim'
  "Plug 'takac/vim-hardtime'
call plug#end()


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Config
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:hardtime_default_on = 1
let g:ruby_path = system('echo $HOME/.rbenv/shims')

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Mapping - benakastah/neomake
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd! BufWritePost * Neomake


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Mapping - bronson/vim-trailing-whitespace
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>fw :FixWhitespace<cr>
autocmd BufWritePre * :FixWhitespace


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin mapping - junegunn/fzf && junegunn/fzf-vim
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" List and select from file list
map <leader><tab> :GFiles<cr>
" List and select from mappings list
map <leader>lm <plug>(fzf-maps-n)
" Insert mode completion
imap <leader>f<tab> <plug>(fzf-complete-file)


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin mapping - junegunn/vim-easy-align
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Interactive visual mode (e.g. vipa)
xmap a <plug>(EasyAlign)
" Interactive motion/text object (e.g. aip)
nmap a <plug>(EasyAlign)


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin mapping - scrooloose/nerdcommenter
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Trigger commenting on every mode
imap <leader>/ <esc><plug>NERDCommenterToggle<cr>i
nmap <leader>/ <plug>NERDCommenterToggle<cr>
vmap <leader>/ <plug>NERDCommenterToggle


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin mapping - scrooloose/nerdtree
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Open up NERDTree panel
map <leader>n :NERDTreeToggle<cr> :NERDTreeMirror<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Plugin configs coc.nvim
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" use <tab> for trigger completion and navigate to the next complete item
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction

inoremap <silent><expr> <Tab>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<Tab>" :
      \ coc#refresh()

inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Other
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
set signcolumn=yes

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Config - Styling

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
colorscheme bubblegum-256-dark
"colorscheme solarized
"set background=light
"let g:airline_theme='bubblegum'

" @nihat's
" Open buffers
nnoremap <leader><leader> :Buffers<CR>
nnoremap ,, <C-^>

set colorcolumn=121
